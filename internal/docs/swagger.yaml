basePath: /
definitions:
  handlers.CreatePasteRequest:
    properties:
      content:
        type: string
      expiresAt:
        type: string
    type: object
  handlers.CreateStatsRequest:
    type: object
  handlers.CreateUserRequest:
    properties:
      username:
        type: string
    type: object
  model.Paste:
    properties:
      content:
        type: string
      createdAt:
        type: string
      expiresAt:
        type: string
      hash:
        type: string
      id:
        type: string
      metrics:
        $ref: '#/definitions/model.Stats'
      views:
        type: integer
    type: object
  model.ShortURL:
    properties:
      id:
        type: string
      original:
        type: string
    type: object
  model.Stats:
    properties:
      id:
        type: string
      views:
        type: integer
    type: object
  model.User:
    properties:
      id:
        type: integer
      posts:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления пастами, пользователями, статистикой и короткими
    URL
  title: Pastebin API
  version: "1.0"
paths:
  /api/paste:
    post:
      consumes:
      - application/json
      description: Создает новую запись paste
      parameters:
      - description: Paste объект
        in: body
        name: paste
        required: true
        schema:
          $ref: '#/definitions/handlers.CreatePasteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Paste'
        "400":
          description: Некорректный JSON
          schema:
            type: string
        "500":
          description: Ошибка на сервере
          schema:
            type: string
      summary: Создать новую запись
      tags:
      - pastes
  /api/paste/{id}:
    delete:
      description: Удаляет paste по ID
      parameters:
      - description: ID пасты
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Паста удалена
        "404":
          description: Paste не найден
          schema:
            type: string
      summary: Удалить запись
      tags:
      - pastes
    get:
      description: Возвращает paste по ID
      parameters:
      - description: ID пасты
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Paste'
        "404":
          description: Paste не найден
          schema:
            type: string
      summary: Получить запись по ID
      tags:
      - pastes
  /api/paste/hash/{hash}:
    get:
      description: Возвращает paste по hash
      parameters:
      - description: Hash пасты
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Paste'
        "404":
          description: Paste не найден
          schema:
            type: string
      summary: Получить запись по хэшу
      tags:
      - pastes
  /api/paste/popular:
    get:
      description: Возвращает топ паст по количеству просмотров
      parameters:
      - description: Максимальное количество записей (по умолчанию 5)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Stats'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить популярные пасты
      tags:
      - stats
  /api/shorturl/{hash}:
    post:
      description: Использует hash пасты как основу для короткой ссылки
      parameters:
      - description: Hash пасты
        in: path
        name: hash
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ShortURL'
        "400":
          description: Хэш слишком короткий
          schema:
            type: string
        "500":
          description: Ошибка сервиса
          schema:
            type: string
      summary: Создать короткий URL
      tags:
      - shorturls
  /api/shorturl/{id}:
    delete:
      description: Удаляет короткий URL по ID
      parameters:
      - description: ID ShortURL
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ShortURL удалён
          schema:
            type: string
        "404":
          description: ShortURL не найден
          schema:
            type: string
      summary: Удалить короткий URL
      tags:
      - shorturls
    get:
      description: Возвращает короткий URL по ID
      parameters:
      - description: ID ShortURL
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ShortURL'
        "404":
          description: ShortURL не найден
          schema:
            type: string
      summary: Получить короткий URL
      tags:
      - shorturls
  /api/shorturls:
    get:
      description: Возвращает список всех коротких URL
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ShortURL'
            type: array
      summary: Получить все короткие URL
      tags:
      - shorturls
  /api/stat/{id}:
    delete:
      description: Удаляет запись статистики по ID
      parameters:
      - description: ID статистики
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Статистика удалена
          schema:
            type: string
        "404":
          description: Статистика не найдена
          schema:
            type: string
      summary: Удалить статистику
      tags:
      - stats
    get:
      description: Возвращает статистику по заданному ID
      parameters:
      - description: ID статистики
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Stats'
        "404":
          description: Статистика не найдена
          schema:
            type: string
      summary: Получить статистику по ID
      tags:
      - stats
  /api/stats:
    get:
      description: Возвращает список всех статистик
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Stats'
            type: array
      summary: Получить все статистики
      tags:
      - stats
    post:
      consumes:
      - application/json
      description: Создает новую запись статистики (ID и views генерируются на сервере)
      parameters:
      - description: Пустой объект запроса
        in: body
        name: stats
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateStatsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Stats'
        "400":
          description: Некорректный ввод
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать статистику
      tags:
      - stats
  /api/user:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать нового пользователя
      tags:
      - users
  /api/user/{id}:
    delete:
      description: Удаляет пользователя по ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Пользователь удален
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
      summary: Удалить пользователя
      tags:
      - users
    get:
      description: Возвращает пользователя по заданному ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
      summary: Получить пользователя по ID
      tags:
      - users
  /api/users:
    get:
      description: Возвращает список всех пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить всех пользователей
      tags:
      - users
  /s/{code}:
    get:
      description: Возвращает пасту, связанную с коротким URL
      parameters:
      - description: Короткий код
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Paste'
        "404":
          description: ShortURL или паста не найдена
          schema:
            type: string
      summary: Получить пасту по короткой ссылке
      tags:
      - shorturls
swagger: "2.0"
